package autoGeneratedTests;

import org.junit.jupiter.api.Test;
import assignmentFiles.subjectFiles.*;
import static org.junit.jupiter.api.Assertions.assertEquals;

public class TestTriangleBranch {

    @Test()
    public void classifySequence10011000000010() // Sequence 1 & 0 in method name denote order each branch/condition is executed as true or false
    {
        Triangle.Type var = Triangle.classify(2, -3, -1);
        assertEquals(Triangle.Type.INVALID, var);
    }

    @Test()
    public void classifySequence11011000000010() // Sequence 1 & 0 in method name denote order each branch/condition is executed as true or false
    {
        Triangle.Type var = Triangle.classify(-2, 3, -1);
        assertEquals(Triangle.Type.INVALID, var);
    }

    @Test()
    public void classifySequence11011100000010() // Sequence 1 & 0 in method name denote order each branch/condition is executed as true or false
    {
        Triangle.Type var = Triangle.classify(-2, -13, 14);
        assertEquals(Triangle.Type.INVALID, var);
    }

    @Test()
    public void classifySequence11111100000010() // Sequence 1 & 0 in method name denote order each branch/condition is executed as true or false
    {
        Triangle.Type var = Triangle.classify(12, -2, -7);
        assertEquals(Triangle.Type.INVALID, var);
    }

    @Test()
    public void classifySequence11111110000111() // Sequence 1 & 0 in method name denote order each branch/condition is executed as true or false
    {
        Triangle.Type var = Triangle.classify(11, 11, 3);
        assertEquals(Triangle.Type.ISOSCELES, var);
    }

    @Test()
    public void classifySequence11111111000111() // Sequence 1 & 0 in method name denote order each branch/condition is executed as true or false
    {
        Triangle.Type var = Triangle.classify(5, 6, 2);
        assertEquals(Triangle.Type.SCALENE, var);
    }

    @Test()
    public void classifySequence11111111011111() // Sequence 1 & 0 in method name denote order each branch/condition is executed as true or false
    {
        Triangle.Type var = Triangle.classify(7, 6, 6);
        assertEquals(Triangle.Type.SCALENE, var);
    }
}
